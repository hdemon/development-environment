#!/bin/sh

# aws cloudformation validate-template \
#     --template-body file://./template.yml

npx cfn-lint validate ./template.yml

# Remake a ssh key for the bastion server
chmod 775 ./bastion-of-development-environment.pem
rm ./bastion-of-development-environment.pem
aws ec2 delete-key-pair --key-name bastion-of-development-environment
aws ec2 create-key-pair --key-name bastion-of-development-environment --query 'KeyMaterial' --output text > bastion-of-development-environment.pem
chmod 400 ./bastion-of-development-environment.pem

# Remake a ssh key for the development server
chmod 775 ./development-environment.pem
rm ./development-environment.pem
aws ec2 delete-key-pair --key-name development-environment
aws ec2 create-key-pair --key-name development-environment --query 'KeyMaterial' --output text > development-environment.pem
chmod 400 ./development-environment.pem

# package first and then deploy otherwise need to use S3 to store the template file.
aws cloudformation package \
    --template-file template.yml \
    --s3-bucket development-environment-template \
    --output-template-file packaged-template.yml

# need this capabilities to create a stack
aws cloudformation deploy \
    --stack-name development-environment \
    --template-file ./packaged-template.yml \
    --capabilities CAPABILITY_IAM \
    --tags date="$(date '+%Y%m%d%H%M%S')"

if [ "$?" = 255 ]; then
    aws cloudformation describe-stack-events --stack-name development-environment | jq '.StackEvents[] | select(.ResourceStatus == "CREATE_FAILED") | { id: .LogicalResourceId, type: .ResourceType, reason: .ResourceStatusReason }'
    aws cloudformation delete-stack --stack-name development-environment
fi
