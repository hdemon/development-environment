AWSTemplateFormatVersion: 2010-09-09
Description: VPC and Subnet Create
Parameters:
  KeyForBastion:
    Description: SSH KeyPair to access to the bastion server
    ConstraintDescription: SSH KeyPair to access to the bastion server
    Type: AWS::EC2::KeyPair::KeyName
    Default: bastion-of-development-environment
  KeyForDevelopment:
    Description: SSH KeyPair to access to the bastion server
    ConstraintDescription: SSH KeyPair to access to the bastion server
    Type: AWS::EC2::KeyPair::KeyName
    Default: development-environment
Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Metadata:
      "AWS::CloudFormation::Designer":
        id: 58838feb-f0e1-4810-9d4b-b7e31f47858b
  InternetGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
    Metadata:
      "AWS::CloudFormation::Designer":
        id: f83aa6eb-e2ac-48f5-bd28-15cb89c9d677
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: 10.1.10.0/24
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
    Metadata:
      "AWS::CloudFormation::Designer":
        id: 09d90cb1-3ad5-4537-9ee5-5c376404cdd1
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId: !Ref DevelopmentServer
      RouteTableId: !Ref PrivateRouteTable
  PrivateSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: 10.1.20.0/24
      VpcId: !Ref VPC
  BastionServer:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: t3.nano
      ImageId: ami-09b68f5653871885f
      KeyName: !Ref KeyForBastion
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref BastionServerSecurityGroup
  BastionServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: For bastoin server
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC
  DevelopmentServer:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: t3.2xlarge
      ImageId: ami-09b68f5653871885f
      KeyName: !Ref KeyForDevelopment
      SubnetId: !Ref PrivateSubnet
      SecurityGroupIds:
        - !Ref DevelopmentServerSecurityGroup
  DevelopmentServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: For development server
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC
